>D
;start, define variables
cntwakeup=0
tmp=0
counttime=0
res=0
timer=0

>B
;setup sensor
=>sensor53 r

>F
;100ms iterations
if pwr[1]==1
then 
timer+=1
counttime+=1
switch counttime
; Stepper push
if timer==20
then
=>dimmer 53
endif
; stepper back
if timer==30
then
=>dimmer 65
endif


case 140
print ===== ctr: %counttime% wakeup start ===== 
;set serial protocol
sml(-1 1 "2400:8N1")
; end 2f just like in the minicom3 software 
sml(1 1 "2f")
;send (132x)  0x55 with 2400 baud (wakeup sequence)
for cntwakeup 1 132 1
sml(1 1 "55")
next

print ===== wakeup end wait for the meter ===== 

case 145
print ===== ctr: %counttime% --SET BAUDRATE TO 2400:8E1-- ===== 

;switch serial protocol for readout
sml(-1 1 "2400:8E1")
print  ===== request data ===== 
case 160
sml(1 1 "1040004016")        
case 166
sml(1 1 "105b005b16")
case 172
sml(1 1 "1040004016")        
case 178
res=sml(1 1 "105b005b16")

print ===== ctr: %counttime% sent successfully %res% =====


case 200
if tmp<1
then 
print  ===== 1x repeat for to ensure reliable readout  =====
counttime=0 
tmp+=1
endif 

; switch off after 1 minute(s), , wait for next acrivation with power on
case 600
=>power1 0

ends
endif


>M 1
+1,3,rE1,0,2400,K_WW,1
1,0C06bcd8@1,Total Energy,kWh,w_total,0
1,0C13bcd8@1000,Total volume,m³,v_total,3
1,0C2bbcd8@1,Current power,W,p_act,0
1,0C3bbcd8@1000,Current flow,m³/h,F_akt,3
1,025AuuUU@10,Flow temp,°C,t_flow,1
1,025euuUU@10,Return temp,°C,t_return,1
#
